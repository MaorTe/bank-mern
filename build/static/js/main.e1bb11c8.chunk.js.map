{"version":3,"sources":["API/api.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","App","useState","userData","setUserData","refMinCash","useRef","refIDSingleAcc","refCash","refID","refCredit","refIDCredit","refWithdraw","refIDWithdraw","refTransfer","refIDTransfer1","refIDTransfer2","createAccount","a","post","data","getAllAccounts","get","getSingleAccount","current","value","filterByCash","depositCash","obj","cash","patch","updateCredit","credit","withdrawCash","transferCash","className","style","display","flexDirection","justifyItems","alignItems","flexWrap","onClick","ref","type","placeholder","map","user","i","border","margin","padding","_id","isActive","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1bb11c8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n\tbaseURL: '/api',\r\n});\r\n\r\nexport default api;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport api from './API/api';\r\nimport './App.css';\r\n//app\r\nconst App = () => {\r\n\t// const [value, setValue] = useState('');\r\n\tconst [userData, setUserData] = useState([]);\r\n\tconst refMinCash = useRef(null);\r\n\tconst refIDSingleAcc = useRef(null);\r\n\r\n\tconst refCash = useRef(null);\r\n\tconst refID = useRef(null);\r\n\r\n\tconst refCredit = useRef(null);\r\n\tconst refIDCredit = useRef(null);\r\n\r\n\tconst refWithdraw = useRef(null);\r\n\tconst refIDWithdraw = useRef(null);\r\n\r\n\tconst refTransfer = useRef(null);\r\n\tconst refIDTransfer1 = useRef(null);\r\n\tconst refIDTransfer2 = useRef(null);\r\n\r\n\tconst createAccount = async () => {\r\n\t\tconst { data } = await api.post('accounts');\r\n\t\tsetUserData([data]);\r\n\t};\r\n\r\n\tconst getAllAccounts = async () => {\r\n\t\tconst { data } = await api.get('accounts');\r\n\t\tsetUserData(data);\r\n\t};\r\n\r\n\tconst getSingleAccount = async () => {\r\n\t\tconst { data } = await api.get(`accounts/${refIDSingleAcc.current.value}`);\r\n\t\tsetUserData([data]);\r\n\t};\r\n\r\n\tconst filterByCash = async () => {\r\n\t\tconst { data } = await api.get(\r\n\t\t\t`accounts/filter/cash?mincash=${refMinCash.current.value}`\r\n\t\t);\r\n\t\tsetUserData(data);\r\n\t};\r\n\r\n\tconst depositCash = async () => {\r\n\t\tconst obj = { cash: +refCash.current.value };\r\n\t\tconst { data } = await api.patch(\r\n\t\t\t`accounts/${refID.current.value}/cash`,\r\n\t\t\tobj\r\n\t\t);\r\n\t\tsetUserData([data]);\r\n\t};\r\n\r\n\tconst updateCredit = async () => {\r\n\t\tconst obj = { credit: +refCredit.current.value };\r\n\t\tconst { data } = await api.patch(\r\n\t\t\t`accounts/${refIDCredit.current.value}/credit`,\r\n\t\t\tobj\r\n\t\t);\r\n\t\tsetUserData([data]);\r\n\t};\r\n\r\n\tconst withdrawCash = async () => {\r\n\t\tconst obj = { cash: +refWithdraw.current.value };\r\n\t\tconst { data } = await api.patch(\r\n\t\t\t`accounts/${refIDWithdraw.current.value}/withdraw`,\r\n\t\t\tobj\r\n\t\t);\r\n\t\tsetUserData([data]);\r\n\t};\r\n\r\n\tconst transferCash = async () => {\r\n\t\tconst obj = { cash: +refTransfer.current.value };\r\n\t\tconst { data } = await api.patch(\r\n\t\t\t`accounts/${refIDTransfer1.current.value}&${refIDTransfer2.current.value}/transfer`,\r\n\t\t\tobj\r\n\t\t);\r\n\t\tsetUserData([data]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"App\"\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: 'flex',\r\n\t\t\t\tflexDirection: 'column',\r\n\t\t\t\tjustifyItems: 'center',\r\n\t\t\t\talignItems: 'center',\r\n\t\t\t\tflexWrap: 'wrap',\r\n\t\t\t}}>\r\n\t\t\t<div className=\"dis-flex\">\r\n\t\t\t\t<button onClick={getAllAccounts}>Get all accounts</button>\r\n\t\t\t\t<button onClick={createAccount}>Add new account</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"dis-flex\">\r\n\t\t\t\t<input ref={refIDSingleAcc} type=\"text\" placeholder=\"Id\" />\r\n\t\t\t\t<button onClick={getSingleAccount}>Get single user</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"dis-flex\">\r\n\t\t\t\t<input ref={refID} type=\"text\" placeholder=\"Id\" />\r\n\t\t\t\t<input ref={refCash} type=\"number\" placeholder=\"cash\" />\r\n\t\t\t\t<button onClick={depositCash}>Deposit cash to a user</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"dis-flex\">\r\n\t\t\t\t<input ref={refIDCredit} type=\"text\" placeholder=\"Id\" />\r\n\t\t\t\t<input ref={refCredit} type=\"number\" placeholder=\"credit\" />\r\n\t\t\t\t<button onClick={updateCredit}>Update a user credit</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"dis-flex\">\r\n\t\t\t\t<input ref={refIDWithdraw} type=\"text\" placeholder=\"Id\" />\r\n\t\t\t\t<input ref={refWithdraw} type=\"number\" placeholder=\"cash\" />\r\n\t\t\t\t<button onClick={withdrawCash}>Withdraw cash from a user</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"dis-flex\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tref={refIDTransfer1}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"first account Id\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\tref={refIDTransfer2}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"second account Id\"\r\n\t\t\t\t/>\r\n\t\t\t\t<input ref={refTransfer} type=\"number\" placeholder=\"cash\" />\r\n\t\t\t\t<button onClick={transferCash}>\r\n\t\t\t\t\tTransfer cash from a user to user\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"dis-flex\">\r\n\t\t\t\t<input ref={refMinCash} type=\"number\" placeholder=\"minimum cash\" />\r\n\t\t\t\t<button onClick={filterByCash}>Filter by minimum cash</button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t{userData.map((user, i) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: '1px solid black',\r\n\t\t\t\t\t\t\tmargin: '10px',\r\n\t\t\t\t\t\t\tpadding: '10px',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<span style={{ display: 'flex' }}>_id: {user._id}</span>\r\n\t\t\t\t\t\t<span style={{ display: 'flex' }}>cash: {user.cash}</span>\r\n\t\t\t\t\t\t<span style={{ display: 'flex' }}>credit: {user.credit}</span>\r\n\t\t\t\t\t\t<span style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t\tisActive: {user.isActive && user.isActive.toString()}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}